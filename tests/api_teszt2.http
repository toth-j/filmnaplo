### Globális változók
@host = http://localhost:3000
@testUsername = filmtesztelo
@testPassword = TesztJelszo123

### Létrehozott film ID-ja (létrehozás után lesz beállítva)
@createdMovieId = {{addMovieSuccess.response.body.id}}

### -------------------------------------
### FELHASZNÁLÓI MŰVELETEK (Előfeltétel)
### -------------------------------------

### 1. Új felhasználó regisztrálása a tesztekhez
# @name registerTestUser
POST {{host}}/api/users/register
Content-Type: application/json

{
    "username": "{{testUsername}}",
    "password": "{{testPassword}}"
}

### 2. Bejelentkezés a teszt felhasználóval és token mentése
# @name loginTestUser
POST {{host}}/api/users/login
Content-Type: application/json

{
    "username": "{{testUsername}}",
    "password": "{{testPassword}}"
}


### -------------------------------------
### FILM MŰVELETEK
### -------------------------------------

### 3. Új film hozzáadása (sikeres)
# @name addMovieSuccess
POST {{host}}/api/movies
Content-Type: application/json

{
    "cim": "Teszt Film Címe",
    "ev": 2023,
    "szereplo": "Teszt Szereplő",
    "ertekeles": 4,
    "velemeny": "Ez egy jó teszt film.",
    "megnezve": "2023-10-26",
    "hol": "Mozi"
}

### 4. Új film hozzáadása (hiba: hiányzó cím)
# @name addMovieMissingTitle
POST {{host}}/api/movies
Content-Type: application/json

{
    "ev": 2023
}

### 5. Új film hozzáadása (hiba: érvénytelen értékelés)
# @name addMovieInvalidRating
POST {{host}}/api/movies
Content-Type: application/json

{
    "cim": "Film Rossz Értékeléssel",
    "ertekeles": 7
}

### 6. Új film hozzáadása (hiba: érvénytelen év)
# @name addMovieInvalidYear
POST {{host}}/api/movies
Content-Type: application/json

{
    "cim": "Film Rossz Évvel",
    "ev": 1700
}

### 7. Új film hozzáadása (hiba: érvénytelen dátum)
# @name addMovieInvalidDate
POST {{host}}/api/movies
Content-Type: application/json

{
    "cim": "Film Rossz Dátummal",
    "megnezve": "2023-13-01"
}

### 8. Felhasználó filmjeinek listázása (sikeres)
# @name listMoviesSuccess
GET {{host}}/api/movies

### 9. Egy konkrét film lekérése (sikeres)
# @name getMovieByIdSuccess
GET {{host}}/api/movies/{{createdMovieId}}

### 10. Egy konkrét film lekérése (hiba: nem létező ID)
# @name getMovieByIdNotFound
GET {{host}}/api/movies/999999

### 11. Egy konkrét film lekérése (hiba: érvénytelen ID formátum)
# @name getMovieByIdInvalidFormat
GET {{host}}/api/movies/abc

### 12. Film adatainak módosítása (sikeres)
# @name updateMovieSuccess
PUT {{host}}/api/movies/{{createdMovieId}}
Content-Type: application/json

{
    "cim": "Frissített Teszt Film Címe",
    "ertekeles": 5,
    "velemeny": "Ez egy frissített vélemény."
}

### 13. Film adatainak módosítása (hiba: érvénytelen értékelés)
# @name updateMovieInvalidRating
PUT {{host}}/api/movies/{{createdMovieId}}
Content-Type: application/json

{
    "ertekeles": 0
}

### 14. Film adatainak módosítása (hiba: nem létező ID)
# @name updateMovieNotFound
PUT {{host}}/api/movies/999999
Content-Type: application/json

{
    "cim": "Nem Létező Film Frissítése"
}

### 15. Film törlése (sikeres)
# @name deleteMovieSuccess
DELETE {{host}}/api/movies/{{createdMovieId}}

### 16. Film törlése (hiba: nem létező ID, mert már töröltük)
# @name deleteMovieNotFound
DELETE {{host}}/api/movies/{{createdMovieId}}

### 17. Kijelentkezés (sikeres)
# @name logoutSuccess
# Ez a kérés törli a HTTP-Only cookie-t a szerver oldalon.
# A kliens (pl. VS Code REST Client) ezután már nem küldi el a cookie-t.
POST {{host}}/api/users/logout